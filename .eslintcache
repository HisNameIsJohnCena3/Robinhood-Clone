[{"C:\\Users\\User\\Desktop\\Robinhood Clone\\robinhood\\src\\index.js":"1","C:\\Users\\User\\Desktop\\Robinhood Clone\\robinhood\\src\\reportWebVitals.js":"2","C:\\Users\\User\\Desktop\\Robinhood Clone\\robinhood\\src\\App.js":"3","C:\\Users\\User\\Desktop\\Robinhood Clone\\robinhood\\src\\Header.js":"4","C:\\Users\\User\\Desktop\\Robinhood Clone\\robinhood\\src\\Newsfeed.js":"5","C:\\Users\\User\\Desktop\\Robinhood Clone\\robinhood\\src\\Stats.js":"6","C:\\Users\\User\\Desktop\\Robinhood Clone\\robinhood\\src\\LineGraph.js":"7","C:\\Users\\User\\Desktop\\Robinhood Clone\\robinhood\\src\\StatsRow.js":"8","C:\\Users\\User\\Desktop\\Robinhood Clone\\robinhood\\src\\firebase.js":"9"},{"size":500,"mtime":1607261332788,"results":"10","hashOfConfig":"11"},{"size":362,"mtime":1607261332788,"results":"12","hashOfConfig":"11"},{"size":441,"mtime":1607316343317,"results":"13","hashOfConfig":"11"},{"size":907,"mtime":1607766513449,"results":"14","hashOfConfig":"11"},{"size":1971,"mtime":1607768865578,"results":"15","hashOfConfig":"11"},{"size":3361,"mtime":1607768424546,"results":"16","hashOfConfig":"11"},{"size":2631,"mtime":1607680469477,"results":"17","hashOfConfig":"11"},{"size":1401,"mtime":1607768365486,"results":"18","hashOfConfig":"11"},{"size":516,"mtime":1607767697235,"results":"19","hashOfConfig":"11"},{"filePath":"20","messages":"21","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"22"},"1eweept",{"filePath":"23","messages":"24","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"25","messages":"26","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"27","messages":"28","errorCount":0,"warningCount":6,"fixableErrorCount":0,"fixableWarningCount":0,"source":"29"},{"filePath":"30","messages":"31","errorCount":1,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"32","usedDeprecatedRules":"22"},{"filePath":"33","messages":"34","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"35","usedDeprecatedRules":"22"},{"filePath":"36","messages":"37","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"38","messages":"39","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"40","messages":"41","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},"C:\\Users\\User\\Desktop\\Robinhood Clone\\robinhood\\src\\index.js",[],["42","43"],"C:\\Users\\User\\Desktop\\Robinhood Clone\\robinhood\\src\\reportWebVitals.js",[],"C:\\Users\\User\\Desktop\\Robinhood Clone\\robinhood\\src\\App.js",[],"C:\\Users\\User\\Desktop\\Robinhood Clone\\robinhood\\src\\Header.js",["44","45","46","47","48","49"],"import React from 'react'\r\nimport Logo from './robinhood.svg'\r\nimport SearchIcon from '@material-ui/icons/Search'\r\nimport './Header.css'\r\n\r\nfunction Header() {\r\n    return (\r\n        <div className=\"header\">\r\n            \r\n            <div className=\"Header-logo\">\r\n                <img src={Logo} width={25} />\r\n            </div>\r\n            <div className=\"header__search\">\r\n                <div className=\"header__searchContainer\">\r\n                    <SearchIcon/>\r\n                    <input placeholder=\"Search\" type=\"text\" />\r\n                </div>\r\n            </div>\r\n            <div className=\"Header-links\">\r\n                <a href=\"#\" >Free Stocks</a>\r\n                <a href=\"#\" >Portfolio</a>\r\n                <a href=\"#\">Cash</a>\r\n                <a href=\"#\">Messages</a>\r\n                <a href=\"#\">Account</a>\r\n            </div>\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default Header\r\n","C:\\Users\\User\\Desktop\\Robinhood Clone\\robinhood\\src\\Newsfeed.js",["50","51"],"import React from 'react'\r\nimport './Newsfeed.scss'\r\nimport LineGraph from './LineGraph'\r\nimport TimeLine from './TimeLine'\r\nimport {Avatar, Chip} from '@material-ui/core'\r\n\r\nconst Newsfeed = () => {\r\n\r\n    const [popularTopics, setPopularTopics]=useState( [\r\n      \"Tech\",\r\n      \"Movies\",\r\n      \"Upcoming Earnings\",\r\n      \"Healthcare\",\r\n      \"Smartphones\",\r\n      \"Technology\",\r\n      \"Pharma\",\r\n    ])\r\n  \r\n    return (\r\n      <div className={'newsfeed'}>\r\n        <div className=\"newsfeed__container\">\r\n          <div className=\"newsfeed__chatSection\">\r\n            <div className=\"newsfeed__portfolio\">\r\n              <h1>$123,456</h1>\r\n              <p>+$23.03 (+0.05%) Today</p>\r\n            </div>\r\n            <div className=\"newsfeed__chart\">\r\n              <LineGraph/>\r\n              <TimeLine/>\r\n            </div>\r\n          </div>\r\n          <div className=\"newsfeed__buyingSection\">\r\n            <h2> Buying Power </h2>\r\n            <h2> $23.00 </h2>\r\n          </div>\r\n          <div className=\"newsfeed__marketSection\">\r\n            <div className=\"newsfeed__marketBox\">\r\n              <p> Markets Closed </p>\r\n              <h1> Merry Christmas </h1>\r\n            </div>\r\n          </div>\r\n          <div className=\"newsfeed__popularlistsSection\">\r\n            <div className=\"newsfeed__popularlistsIntro\">\r\n              <h1> Popular lists </h1>\r\n              <p> Show More </p>\r\n            </div>\r\n            <div className=\"newsfeed__popularlistsBadges\">\r\n              {popularTopics.map((topic)=>(\r\n                <Chip\r\n                  className={'topic__badge'}\r\n                  variant={'outlined'}\r\n                  label={topic}\r\n                  avatar={<Avatar\r\n                  src={`https://avatars.dicebear.com/4.5/api/human/${topic}.svg`}\r\n                  />}\r\n                />\r\n              ))}\r\n            </div>\r\n          </div>\r\n        </div>\r\n  \r\n      </div>\r\n    );\r\n  };\r\n  \r\n  export default Newsfeed;\r\n  ","C:\\Users\\User\\Desktop\\Robinhood Clone\\robinhood\\src\\Stats.js",["52","53","54"],"import React, { useState, useEffect } from 'react'\r\nimport './Stats.css'\r\nimport axios from 'axios'\r\nimport StatsRow from './StatsRow'\r\nimport {db} from './firebase';\r\n\r\nconst TOKEN = \"bva7pa748v6us1m9hse0\";\r\nconst BASE_URL = \"https://finnhub.io/api/v1/quote\"\r\n\r\nfunction Stats() {\r\n\r\n    const [stockData, setstockData] = useState([]);\r\n    const [myStocks, setMyStocks] = useState([]);\r\n\r\n    const getStockData = (stock) => {\r\n        return axios\r\n        .get(`${BASE_URL}?symbol=${stock}&token=${TOKEN}`)\r\n        .catch((error) => {\r\n            console.error(\"Error\", error.message)\r\n        })\r\n    }\r\n\r\n    const getMyStocks = () => {\r\n        db.collection('myStocks')\r\n          .onSnapshot(snapshot => {\r\n            let promises = []\r\n            let tempData = []\r\n            snapshot.docs.map((doc)=> {\r\n              promises.push(getStockData(doc.data().ticker)\r\n                .then(res => {\r\n                  tempData.push({\r\n                    id:doc.id,\r\n                    data:doc.data(),\r\n                    info:res.data\r\n                  })\r\n                })\r\n              )})\r\n            Promise.all(promises).then(()=>{\r\n              setMyStocks(tempData)\r\n            })\r\n          })\r\n      }\r\n\r\n    useEffect(() => {\r\n        let testData = []\r\n        const stocksList = [\"AAPL\" , \"MSFT\", \"TSLA\", \"FB\", \"BABA\", \"UBER\", \"DIS\", \"SBUX\"];\r\n        let promises = [];\r\n        getMyStocks()\r\n        stocksList.map((stock) => {\r\n            promises.push(\r\n                getStockData(stock)\r\n                .then((res) => {\r\n                    testData.push({\r\n                        name: stock,\r\n                        ...res.data\r\n                    });\r\n                })\r\n            )\r\n        });\r\n\r\n        Promise.all(promises).then(()=>{\r\n            setstockData(testData);\r\n        })\r\n    }, [])\r\n\r\n\r\n    return (\r\n        <div className=\"stats\">\r\n            <div className=\"stats__container\">\r\n                <div className=\"stats__header\">\r\n                    <p>Stocks</p>\r\n                </div>\r\n                <div className=\"stats__content\">\r\n                    <div className=\"stats__rows\">\r\n                        {myStocks.map((stock)=>(\r\n                            <StatsRow\r\n                                key={stock.data.ticker}\r\n                                name={stock.data.ticker}\r\n                                openPrice={stock.info.o}\r\n                                shares={stock.data.shares}\r\n                                price={stock.info.c}\r\n                            />\r\n                ))}\r\n                    </div>\r\n                </div>\r\n                <div className=\"stats__header\">\r\n                    <p>Lists</p>\r\n                </div>\r\n                <div className=\"stats__content\">\r\n                    <div className=\"stats__rows\">\r\n                        {stockData.map((stock)=> (\r\n                                <StatsRow \r\n                                    key={stock.name}\r\n                                    name={stock.name}\r\n                                    openPrice={stock.o}\r\n                                    price={stock.c}\r\n                                />\r\n                            ))}\r\n                    </div>\r\n                </div>\r\n            </div>\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default Stats\r\n","C:\\Users\\User\\Desktop\\Robinhood Clone\\robinhood\\src\\LineGraph.js",[],"C:\\Users\\User\\Desktop\\Robinhood Clone\\robinhood\\src\\StatsRow.js",["55"],"C:\\Users\\User\\Desktop\\Robinhood Clone\\robinhood\\src\\firebase.js",[],{"ruleId":"56","replacedBy":"57"},{"ruleId":"58","replacedBy":"59"},{"ruleId":"60","severity":1,"message":"61","line":11,"column":17,"nodeType":"62","endLine":11,"endColumn":46},{"ruleId":"63","severity":1,"message":"64","line":20,"column":17,"nodeType":"62","endLine":20,"endColumn":30},{"ruleId":"63","severity":1,"message":"64","line":21,"column":17,"nodeType":"62","endLine":21,"endColumn":30},{"ruleId":"63","severity":1,"message":"64","line":22,"column":17,"nodeType":"62","endLine":22,"endColumn":29},{"ruleId":"63","severity":1,"message":"64","line":23,"column":17,"nodeType":"62","endLine":23,"endColumn":29},{"ruleId":"63","severity":1,"message":"64","line":24,"column":17,"nodeType":"62","endLine":24,"endColumn":29},{"ruleId":"65","severity":1,"message":"66","line":9,"column":27,"nodeType":"67","messageId":"68","endLine":9,"endColumn":43},{"ruleId":"69","severity":2,"message":"70","line":9,"column":45,"nodeType":"67","messageId":"71","endLine":9,"endColumn":53},{"ruleId":"72","severity":1,"message":"73","line":28,"column":36,"nodeType":"74","messageId":"75","endLine":28,"endColumn":38},{"ruleId":"72","severity":1,"message":"73","line":49,"column":32,"nodeType":"74","messageId":"75","endLine":49,"endColumn":34},{"ruleId":"76","severity":1,"message":"77","line":64,"column":8,"nodeType":"78","endLine":64,"endColumn":10,"suggestions":"79"},{"ruleId":"60","severity":1,"message":"61","line":35,"column":17,"nodeType":"62","endLine":35,"endColumn":51},"no-native-reassign",["80"],"no-negated-in-lhs",["81"],"jsx-a11y/alt-text","img elements must have an alt prop, either with meaningful text, or an empty string for decorative images.","JSXOpeningElement","jsx-a11y/anchor-is-valid","The href attribute requires a valid value to be accessible. Provide a valid, navigable address as the href value. If you cannot provide a valid href, but still need the element to resemble a link, use a button and change it with appropriate styles. Learn more: https://github.com/evcohen/eslint-plugin-jsx-a11y/blob/master/docs/rules/anchor-is-valid.md","no-unused-vars","'setPopularTopics' is assigned a value but never used.","Identifier","unusedVar","no-undef","'useState' is not defined.","undef","array-callback-return","Array.prototype.map() expects a return value from arrow function.","ArrowFunctionExpression","expectedInside","react-hooks/exhaustive-deps","React Hook useEffect has a missing dependency: 'getMyStocks'. Either include it or remove the dependency array.","ArrayExpression",["82"],"no-global-assign","no-unsafe-negation",{"desc":"83","fix":"84"},"Update the dependencies array to be: [getMyStocks]",{"range":"85","text":"86"},[1853,1855],"[getMyStocks]"]